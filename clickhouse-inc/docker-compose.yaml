services:

  clickhouse:
    image: clickhouse/clickhouse-server:latest
    container_name: clickhouse-server
    hostname: clickhouse-server
    ports:
      - "8123:8123"  # http port
      - "8124:9000"  # tcp port modified to not conflict with minio port
    volumes:
      - ./clickhouse/server/config:/etc/clickhouse-server/config.d
      - ./clickhouse/server/users:/etc/clickhouse-server/users.d
      - ./clickhouse/data:/var/lib/clickhouse
    environment:
      - CLICKHOUSE_USER=default
      - CLICKHOUSE_PASSWORD=
    networks:
      - icehouse
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8123/ping || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  iceberg:
    image: tabulario/iceberg-rest:latest
    container_name: iceberg
    hostname: iceberg
    ports:
      - "8181:8181"  # iceberg port
    environment: # these envs MUST be set at the booting container
      - AWS_ACCESS_KEY_ID=root
      - AWS_SECRET_ACCESS_KEY=securepassword
      - AWS_REGION=us-east-1
      - CATALOG_WAREHOUSE=s3://data/
      - CATALOG_IO__IMPL=org.apache.iceberg.aws.s3.S3FileIO
      - CATALOG_S3_ENDPOINT=http://minio:9000
      - CATALOG_S3_PATH_STYLE_ACCESS=true
    networks:
      - icehouse
    restart: unless-stopped

  minio:
    image: minio/minio:latest
    container_name: minio
    hostname: minio
    ports:
      - "9000:9000"  # incoming connections
      - "9001:9001"  # webUI
    volumes:
      - ./minio/data:/data
    environment:
      - MINIO_ROOT_USER=root
      - MINIO_ROOT_PASSWORD=securepassword
      - MINIO_DOMAIN=minio
    networks:
      icehouse:
        aliases:
          - data.minio
    restart: unless-stopped
    command: ["server", "--address", "0.0.0.0:9000", "--console-address", "0.0.0.0:9001", "/data"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://minio:9000/minio/health/ready"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 30s

  mc:
    image: minio/mc:latest
    container_name: mc
    hostname: mc
    environment:
      - MINIO_ROOT_USER=root
      - MINIO_ROOT_PASSWORD=securepassword
      - AWS_REGION=us-east-1
    networks:
      - icehouse
    depends_on:
      - minio
    entrypoint: |
      /bin/sh -c "
      until (/usr/bin/mc alias set minio http://minio:9000 root securepassword) do
        echo '...waiting...' && sleep 1;
      done;

      /usr/bin/mc rb --force minio/data && sleep 2;
      /usr/bin/mc mb minio/data && sleep 2;
      /usr/bin/mc anonymous set public minio/data;
      tail -f /dev/null"
  
  # migration:
  #   image: ghcr.io/kukymbr/goose-docker:latest
  #   container_name: migration
  #   hostname: migration
  #   volumes:
  #     - ./clickhouse/migration:/migrations
  #   environment:
  #     - GOOSE_DRIVER=clickhouse
  #     - GOOSE_DBSTRING=http://clickhouse:8123/
  #   networks:
  #     - icehouse
  #   restart: on-failure
  #   depends_on:
  #     clickhouse:
  #       condition: service_healthy

  python-exec:
    build:
      context: ./iceberg/conf
      dockerfile: ./Dockerfile
    container_name: python-exec
    hostname: python-exec
    depends_on:
      - iceberg
      - mc
    networks:
      - icehouse
    restart: on-failure


networks:
  icehouse:
    name: icehouse
