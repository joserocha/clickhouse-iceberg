services:

  clickhouse:
    image: clickhouse/clickhouse-server:latest
    container_name: clickhouse-server
    hostname: clickhouse-server
    ports:
      - "8123:8123"  # http port
      - "8124:9000"  # tcp port
    volumes:
      - ./clickhouse/server/config:/etc/clickhouse-server/config.d
      - ./clickhouse/server/users:/etc/clickhouse-server/users.d
      - ./clickhouse/data:/var/lib/clickhouse
    environment:
      - CLICKHOUSE_USER=default
      - CLICKHOUSE_PASSWORD=
    networks:
      - icehouse
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8123/ping || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  iceberg:
    image: apache/iceberg-rest-fixture:latest
    container_name: iceberg
    hostname: iceberg
    ports:
      - "8181:8181"  # iceberg port
    environment:
      - AWS_ACCESS_KEY_ID=root
      - AWS_SECRET_ACCESS_KEY=securepassword
      - AWS_REGION=us-east-1
      - CATALOG_WAREHOUSE=s3://warehouse/
      - CATALOG_IO__IMPL=org.apache.iceberg.aws.s3.S3FileIO
      - CATALOG_S3_ENDPOINT=http://minio:9000
      - CATALOG_S3_PATH_STYLE_ACCESS=true
      - LOG_LEVEL=DEBUG
      - JAVA_TOOL_OPTIONS=-Dlog4j2.configurationFile=/opt/iceberg/conf/log4j2.properties
    networks:
      - icehouse
    restart: unless-stopped
      #    healthcheck:
      #      test: ["CMD", "bash -c 'echo > /dev/tcp/localhost/8181'"]
      #      interval: 1s
      #      timeout: 5s
      #      retries: 10
      #      start_period: 30s

  minio:
    image: minio/minio:latest
    container_name: minio
    hostname: minio
    ports:
      - "9000:9000"  # incoming connections
      - "9001:9001"  # webUI
    volumes:
      - ./minio/data:/data
    environment:
      - MINIO_ROOT_USER=root
      - MINIO_ROOT_PASSWORD=securepassword
      - MINIO_DOMAIN=minio
    networks:
      icehouse:
        aliases:
          - warehouse.minio
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://minio:9000/minio/health/ready"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 30s
    command: ["server", "--address", "0.0.0.0:9000", "--console-address", "0.0.0.0:9001", "/data"]

  mc:
    image: minio/mc:latest
    container_name: mc
    hostname: mc
    environment:
      - MINIO_ROOT_USER=root
      - MINIO_ROOT_PASSWORD=securepassword
      - AWS_REGION=us-east-1
    networks:
      - icehouse
    depends_on:
      - minio
    entrypoint: |
      /bin/sh -c "
      until (/usr/bin/mc alias set minio http://minio:9000 root securepassword) do
        echo '...waiting...' && sleep 1;
      done;

      /usr/bin/mc rb --force minio/warehouse && sleep 2;
      /usr/bin/mc mb minio/warehouse && sleep 2;
      /usr/bin/mc anonymous set public minio/warehouse;
      tail -f /dev/null"
  
  migration:
    image: ghcr.io/kukymbr/goose-docker:latest
    container_name: migration
    hostname: migration
    volumes:
      - ./clickhouse/migration:/migrations
    environment:
      - GOOSE_DRIVER=clickhouse
      - GOOSE_DBSTRING=http://clickhouse:8123/
    networks:
      - icehouse
    restart: on-failure
    depends_on:
      clickhouse:
        condition: service_healthy

  init-schema:
    build:
      context: ./iceberg/python
      dockerfile: ./Dockerfile
    container_name: init-schema
    hostname: init-schema
    depends_on:
      - iceberg
      - mc
    volumes:
      - ./iceberg/python:/app
      - ./iceberg/data/schema-logs:/var/log/schema
    command: >
      /bin/bash -c
      "
      echo 'Starting initialization at $(date)' | tee -a /var/log/schema/init.log &&
      echo 'Checking installed packages:' | tee -a /var/log/schema/init.log &&
      pip list | grep -E 'numpy|pandas|pyarrow|pyiceberg' | tee -a /var/log/schema/init.log &&
      echo 'Running schema creation script...' | tee -a /var/log/schema/init.log &&
      python -c 'import sys; print(f\"Python version: {sys.version}\"); import numpy; print(f\"NumPy version: {numpy.__version__}\"); import pandas; print(f\"Pandas version: {pandas.__version__}\"); import pyarrow; print(f\"PyArrow version: {pyarrow.__version__}\"); import pyiceberg; print(f\"PyIceberg version: {pyiceberg.__version__}\")' 2>&1 | tee -a /var/log/schema/init.log &&
      python create_battery_schema.py --catalog http://iceberg:8181 --warehouse warehouse --namespace iot_battery --table battery_v2 2>&1 | tee -a /var/log/schema/init.log &&
      echo 'Schema creation completed. Container will stay running for debugging.' | tee -a /var/log/schema/init.log &&
      tail -f /dev/null
      "
    networks:
      - icehouse
    restart: on-failure
    environment:
      - PYTHONUNBUFFERED=1
      - MINIO_ROOT_USER=root
      - MINIO_ROOT_PASSWORD=securepassword
      - AWS_REGION=us-east-1
      - AWS_S3_ENDPOINT=http://minio:9000
      - AWS_S3_PATH_STYLE_ACCESS=true
      - AWS_S3_FORCE_PATH_STYLE=true
      - S3_USE_SIGV4=True
      - S3_VERIFY_SSL=False


networks:
  icehouse:
    name: icehouse
